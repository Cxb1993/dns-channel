SUBROUTINE LUdecompStep(POINTER TO ARRAY(*,-2..2) OF REAL A)
  IF last THEN A(HI-2,1..2)=0; A(HI-3,2)=0 ELSE
    READ BINARY FROM next A(HI-1),A(HI)
  END IF
  REAL piv
  LOOP FOR i=A.HI1-A.HI2 DOWN TO A.LO1
    LOOP FOR k=A.HI2 DOWN TO 1
      POINTER INTO A(i,*+k),A(i+k,*) j=0
      piv=A(i,j+k)
      DO DEC j; A(i,j+k)=~-piv*A(i+k,j) FOR -A.LO2 TIMES
    REPEAT LOOP
    piv=1/A(i,0); A(i,0)=piv
    LOOP FOR j INTO A(i,A.LO2..-1): A(i,j)=~*piv
  REPEAT LOOP
  IF first THEN A(LO,-2..-1)=0; A(LO+1,-2)=0 ELSE
    WRITE BINARY TO prev A(LO),A(LO+1)
  END IF
END LUdecompStep

SUBROUTINE LeftLUDivStep1(POINTER TO ARRAY(*) OF REAL x; ARRAY(*,-2..2) OF REAL A; ARRAY(*) OF REAL t)
  IF NOT last THEN READ BINARY FROM next x(HI-1),x(HI)
  LOOP FOR i=A.HI1-A.HI2 DOWN TO A.LO1
    POINTER INTO A(i,*),x(i+*) j=A.HI2
    REAL sum=t(i)
    LOOP FOR A.HI2 TIMES: sum=~-A(i,j)*x(i+j); DEC j
    x(i+j)=sum*A(i,j)
  REPEAT LOOP
  IF NOT first THEN WRITE BINARY TO prev x(LO+2),x(LO+3)
END LeftLUDivStep1

INLINE SUBROUTINE FlushStep1 = IF NOT first THEN FLUSH prev

SUBROUTINE LeftLUDivStep2(POINTER TO ARRAY(*) OF REAL x; ARRAY(*,-2..2) OF REAL A)
  IF NOT first THEN READ BINARY FROM prev x(LO),x(LO+1)
  LOOP FOR i=A.LO1 TO A.HI1
    POINTER INTO A(i,*),x(i+*) j=A.LO2
    REAL sum=0
    LOOP FOR -A.LO2 TIMES: sum=~+A(i,j)*x(i+j); INC j
    x(i+j)=~-sum
  REPEAT LOOP
  IF NOT last THEN WRITE BINARY TO next x(HI-3),x(HI-2)
END LeftLUDivStep2

INLINE SUBROUTINE FlushStep2 = IF NOT last THEN FLUSH next


!-----------------------------
!-----------------------------


SUBROUTINE LUdecompStep(POINTER TO ARRAY(*,-2..2) OF REAL A; POINTER TO ARRAY(0..1,-2..2) OF REAL buf)
  IF last THEN A(HI-2,1..2)=0; A(HI-3,2)=0 ELSE
    A(HI-1)=buf(0);  A(HI)=buf(1) !A(HI-1..HI)=buf(0..1)
  END IF
!This writes 2*5 reals!
  REAL piv
  LOOP FOR i=A.HI1-A.HI2 DOWN TO A.LO1
    LOOP FOR k=A.HI2 DOWN TO 1
      POINTER INTO A(i,*+k),A(i+k,*) j=0
      piv=A(i,j+k)
      DO DEC j; A(i,j+k)=~-piv*A(i+k,j) FOR -A.LO2 TIMES
    REPEAT LOOP
    piv=1/A(i,0); A(i,0)=piv
    LOOP FOR j INTO A(i,A.LO2..-1): A(i,j)=~*piv
  REPEAT LOOP
  IF first THEN A(LO,-2..-1)=0; A(LO+1,-2)=0 ELSE
    buf(0)=A(LO); buf(1)=A(LO+1) !buf(0..1)=A(LO..LO+1)
  END IF
END LUdecompStep

SUBROUTINE LeftLUDivStep1(POINTER TO ARRAY(*) OF REAL x; ARRAY(*,-2..2) OF REAL A; ARRAY(*) OF REAL t; POINTER TO ARRAY(0..1) OF REAL buf)
  !IF NOT last THEN READ BINARY FROM next x(HI-1),x(HI)
  IF NOT last THEN x(HI-1)=buf(0); x(HI)=buf(1) !x(HI-1..HI)=buf(0..1)
  LOOP FOR i=A.HI1-A.HI2 DOWN TO A.LO1
    POINTER INTO A(i,*),x(i+*) j=A.HI2
    REAL sum=t(i)
    LOOP FOR A.HI2 TIMES: sum=~-A(i,j)*x(i+j); DEC j
    x(i+j)=sum*A(i,j)
  REPEAT LOOP
  !IF NOT first THEN WRITE BINARY TO prev x(LO+2),x(LO+3)
  IF NOT first THEN buf(0)=x(LO+2); buf(1)=x(LO+3) !buf(0..1)=x(LO+2..LO+3) 
!This writes just 2 reals!
END LeftLUDivStep1

SUBROUTINE LeftLUDivStep2(POINTER TO ARRAY(*) OF REAL x; ARRAY(*,-2..2) OF REAL A; POINTER TO ARRAY(0..1) OF REAL buf)
  !IF NOT first THEN READ BINARY FROM prev x(LO),x(LO+1)
  IF NOT first THEN x(LO)=buf(0); x(LO+1)=buf(1) !x(LO..LO+1)=buf(0..1)
  LOOP FOR i=A.LO1 TO A.HI1
    POINTER INTO A(i,*),x(i+*) j=A.LO2
    REAL sum=0
    LOOP FOR -A.LO2 TIMES: sum=~+A(i,j)*x(i+j); INC j
    x(i+j)=~-sum
  REPEAT LOOP
  !IF NOT last THEN WRITE BINARY TO next x(HI-3),x(HI-2)
  IF NOT last THEN buf(0)=x(HI-3); buf(1)=x(HI-2) !buf(0..1)=x(HI-3..HI-2)
!And this writes just 2 reals too!
END LeftLUDivStep2

