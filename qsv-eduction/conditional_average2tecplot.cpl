gamma=0
outinterv=0
USE rtchecks
USE ../dnsdata
USE ../dnsdirect
USE ../tke/convenience

ARRAY(0..20) OF CHAR fieldname, vtkname
INTEGER dn; ASK dn
FILE outfile

REAL Retau,lambda2th,lambda2th_meanvortex,box_length_plus,box_width_plus,box_height_plus,control_volume_length_plus,control_volume_width_plus,max_tilt_angle,phi0
REAL control_volume_height_plus,search_width_angle,search_height_angle,search_height_plus,qsv_min_length,max_vortex_height,min_vortex_height
INTEGER max_vortices_per_wall
FILE eduction_in=OPEN("eduction.in"); 
READ BY NAME FROM eduction_in Retau,lambda2th,lambda2th_meanvortex,box_length_plus,box_width_plus,box_height_plus,control_volume_length_plus,control_volume_width_plus
READ BY NAME FROM eduction_in control_volume_height_plus,search_width_angle,search_height_angle,search_height_plus,qsv_min_length,max_vortex_height,min_vortex_height
READ BY NAME FROM eduction_in max_vortices_per_wall,max_tilt_angle,phi0
CLOSE eduction_in

SINGLE tmpu, tmpv, tmpw, tmp
INTEGER xp=0, xp2=0, lxfwd, lxfwdmax=0, lxbwd, ixp, izp, midx, midz, count
INTEGER iymax=0, izmin=0, iymin=0, search_iymin, search_iymax
REAL lambda2min=0.0, resx, resz, tmpr, azimut, elevation, vortex_length
INTEGER box_length, search_width, search_height, box_width, box_height, volume_length, volume_width, volume_height
resx = 2*PI/(alfa0*(2*nxd)); resz = 2*PI/(beta0*nzd)
search_width = CEILING{TAN(search_width_angle*PI/180)*resx/resz}			         !! Angle the vortex core is searched within (Jeong&Hussain 30Â°)
box_length   = CEILING[box_length_plus/(resx*Retau)]; box_length = MIN(box_length, nxd)
box_width    = CEILING[box_width_plus/(resz*Retau)];  box_width  = MIN(box_width, nzd DIV 2)
DO INC box_height WHILE (y(box_height+1)-y(0))*Retau<box_height_plus
volume_length = CEILING[control_volume_length_plus/(resx*Retau)]; volume_length = MIN(volume_length, nxd)
volume_width  = CEILING[control_volume_width_plus/(resz*Retau)];  volume_width  = MIN(box_width, nzd DIV 2)
DO INC volume_height WHILE (y(volume_height+1)-y(0))*Retau<control_volume_height_plus
DO INC iymax WHILE (y(iymax+1)-y(0))*Retau<search_height_plus                                    !! Maximum search height 	
ARRAY(-nxd..nxd, 1..2) OF INTEGER vortex_cores=0	                                         !! z,y coordinates of the centerline of a single candidate vortex
ARRAY(0..dn-1) OF INTEGER educed=0				                                 !! Number of educed vortices
ARRAY(1..max_vortices_per_wall,1..3) OF INTEGER vortex_centers=0                                 !! x,y,z coordinates of all educed vortices on one wall
WRITE BY NAME box_length, box_height, box_width

ARRAY(-box_length..box_length,-box_width..box_width,0..box_height,0..dn-1) OF REAL lambdaavg=0				!! Conditionally averaged lambda2 field
ARRAY(-box_length..box_length,-box_width..box_width,0..box_height,0..dn-1) OF STRUCTURE(REAL u,v,w) Vavg=0		!! Conditionally averaged velocity field
ARRAY(-box_length..box_length,-box_width..box_width) OF STRUCTURE(REAL ux,uy,uz,vx,vy,vz,wx,wy,wz) gradVdavg=0          !! Derivative of the conditionally averaged velocity field
ARRAY(-box_length..box_length,-box_width..box_width,0..box_height,0..dn-1) OF STRUCTURE(REAL Q2 Q4) rms_uv=0		!! Conditionally averaged rms field 
ARRAY(-box_length..box_length,-box_width..box_width,0..box_height,0..dn-1) OF STRUCTURE(REAL Q1,Q2,Q3,Q4) rmsavg_uv=0	!! rms field of the conditionally averaged velocity field
ARRAY(-box_length..box_length,-box_width..box_width,0..box_height,0..dn-1) OF STRUCTURE(REAL u,v,w) omegaavg=0          !! Conditionally averaged streamwise vorticity 
ARRAY(-box_length..box_length,-box_width..box_width,0..box_height,0..dn-1) OF REAL pavg=0		                !! Conditionally averaged pressure field 
ARRAY(-box_length..box_length,-box_width..box_width,0..box_height,0..dn-1) OF REAL pstrain=0				!! Conditionally averaged pressure strain field
POINTER TO STORED STRUCTURE(
   ARRAY(0..dn-1,0..box_height,-box_length..box_length,-box_width..box_width) OF REAL lambdaimage
   ARRAY(0..dn-1,0..box_height,-box_length..box_length,-box_width..box_width) OF STRUCTURE(REAL u,v,w) Vavgimage
   ARRAY(0..dn-1,0..box_height,-box_length..box_length,-box_width..box_width) OF STRUCTURE(REAL Q2 Q4) rmsimage
   ARRAY(0..dn-1,0..box_height,-box_length..box_length,-box_width..box_width) OF STRUCTURE(REAL Q1,Q2,Q3,Q4) rmsavgimage
   ARRAY(0..dn-1,0..box_height,-box_length..box_length,-box_width..box_width) OF STRUCTURE(REAL u,v,w) omegaavgimage
   ARRAY(0..dn-1,0..box_height,-box_length..box_length,-box_width..box_width) OF REAL pavgimage
   ARRAY(0..dn-1,0..box_height,-box_length..box_length,-box_width..box_width) OF REAL pstrainimage )condfield


condfield=OPENRO("conditional_average.fld")
LOOP phases FOR n=1 TO dn

  ! Read conditional fields
  LOOP FOR iy=0 TO box_height WITH condfield
    lambdaavg(*,*,iy,n-1)=lambdaimage(n-1,iy,*,*)
    Vavg(*,*,iy,n-1)=Vavgimage(n-1,iy,*,*)
    rms_uv(*,*,iy,n-1)=rmsimage(n-1,iy,*,*)
    rmsavg_uv(*,*,iy,n-1)=rmsavgimage(n-1,iy,*,*)
    omegaavg(*,*,iy,n-1)=omegaavgimage(n-1,iy,*,*)
    pavg(*,*,iy,n-1)=pavgimage(n-1,iy,*,*)
    pstrain(*,*,iy,n-1)=pstrainimage(n-1,iy,*,*)
  REPEAT LOOP 

  vtkname = WRITE('CField'n'.vtk')
  outfile = CREATE(vtkname)

  WRITE TO outfile "# vtk DataFile Version 2.0"
  WRITE TO outfile "DNS lambda2"
  WRITE TO outfile "BINARY"
  WRITE TO outfile "DATASET RECTILINEAR_GRID"
  WRITE TO outfile "DIMENSIONS "2*box_length+1" "box_height+1" "2*box_width+1
  WRITE TO outfile "X_COORDINATES "2*box_length+1" float"
  LOOP FOR ix=0 TO 2*box_length
    tmp=SINGLE(2*PI*Retau/alfa0*ix/(2*nxd))
    ByteSwap(^tmp); WRITE BINARY TO outfile tmp
  REPEAT
  WRITE TO outfile "Y_COORDINATES "box_height+1" float"
  LOOP FOR iy=0 TO box_height 
    tmp=SINGLE(y(iy)*Retau)
    ByteSwap(^tmp); WRITE BINARY TO outfile tmp
  REPEAT
  WRITE TO outfile "Z_COORDINATES "2*box_width+1" float"
  LOOP FOR iz=0 TO 2*box_width
    tmp=SINGLE(2*PI*Retau/beta0*iz/nzd)
    ByteSwap(^tmp); WRITE BINARY TO outfile tmp
  REPEAT
  WRITE TO outfile "POINT_DATA " (2*box_length+1)*(2*box_width+1)*(box_height+1)

  WRITE TO outfile "SCALARS lambda2 float 1"
  WRITE TO outfile "LOOKUP_TABLE default"
  LOOP FOR iz=-box_width TO box_width AND iy=0 TO box_height AND ix=-box_length TO box_length
        tmp=SINGLE(lambdaavg(ix,iz,iy,n-1)); ByteSwap(^tmp); WRITE BINARY TO outfile tmp 
  REPEAT
  
  WRITE TO outfile "SCALARS Q2 float 1"
  WRITE TO outfile "LOOKUP_TABLE default"
  LOOP FOR iz=-box_width TO box_width AND iy=0 TO box_height AND ix=-box_length TO box_length
        tmp=SINGLE(rms_uv(ix,iz,iy,n-1).Q2); ByteSwap(^tmp); WRITE BINARY TO outfile tmp 
  REPEAT

  WRITE TO outfile "SCALARS Q4 float 1"
  WRITE TO outfile "LOOKUP_TABLE default"
  LOOP FOR iz=-box_width TO box_width AND iy=0 TO box_height AND ix=-box_length TO box_length
        tmp=SINGLE(rms_uv(ix,iz,iy,n-1).Q4); ByteSwap(^tmp); WRITE BINARY TO outfile tmp 
  REPEAT

  WRITE TO outfile "SCALARS Q1avg float 1"
  WRITE TO outfile "LOOKUP_TABLE default"
  LOOP FOR iz=-box_width TO box_width AND iy=0 TO box_height AND ix=-box_length TO box_length
        tmp=SINGLE(rmsavg_uv(ix,iz,iy,n-1).Q1); ByteSwap(^tmp); WRITE BINARY TO outfile tmp 
  REPEAT

  WRITE TO outfile "SCALARS Q2avg float 1"
  WRITE TO outfile "LOOKUP_TABLE default"
  LOOP FOR iz=-box_width TO box_width AND iy=0 TO box_height AND ix=-box_length TO box_length
        tmp=SINGLE(rmsavg_uv(ix,iz,iy,n-1).Q2); ByteSwap(^tmp); WRITE BINARY TO outfile tmp 
  REPEAT

  WRITE TO outfile "SCALARS Q3avg float 1"
  WRITE TO outfile "LOOKUP_TABLE default"
  LOOP FOR iz=-box_width TO box_width AND iy=0 TO box_height AND ix=-box_length TO box_length
        tmp=SINGLE(rmsavg_uv(ix,iz,iy,n-1).Q3); ByteSwap(^tmp); WRITE BINARY TO outfile tmp 
  REPEAT

  WRITE TO outfile "SCALARS Q4avg float 1"
  WRITE TO outfile "LOOKUP_TABLE default"
  LOOP FOR iz=-box_width TO box_width AND iy=0 TO box_height AND ix=-box_length TO box_length
        tmp=SINGLE(rmsavg_uv(ix,iz,iy,n-1).Q4); ByteSwap(^tmp); WRITE BINARY TO outfile tmp 
  REPEAT

  WRITE TO outfile "SCALARS pressure float 1"
  WRITE TO outfile "LOOKUP_TABLE default"
  LOOP FOR iz=-box_width TO box_width AND iy=0 TO box_height AND ix=-box_length TO box_length
        tmp=SINGLE(pavg(ix,iz,iy,n-1)); ByteSwap(^tmp); WRITE BINARY TO outfile tmp 
  REPEAT

  WRITE TO outfile "SCALARS pstrain float 1"
  WRITE TO outfile "LOOKUP_TABLE default"
  LOOP FOR iz=-box_width TO box_width AND iy=0 TO box_height AND ix=-box_length TO box_length
        tmp=SINGLE(pstrain(ix,iz,iy,n-1)); ByteSwap(^tmp); WRITE BINARY TO outfile tmp 
  REPEAT

  WRITE TO outfile "VECTORS velocity float"
  LOOP FOR iz=-box_width TO box_width AND iy=0 TO box_height AND ix=-box_length TO box_length
    tmpu=SINGLE(Vavg(ix,iz,iy,n-1).u); tmpv=SINGLE(Vavg(ix,iz,iy,n-1).v); tmpw=SINGLE(Vavg(ix,iz,iy,n-1).w) 
    ByteSwap(^tmpu); ByteSwap(^tmpv);ByteSwap(^tmpw); WRITE BINARY TO outfile tmpu,tmpv,tmpw 
  REPEAT

  WRITE TO outfile "VECTORS vorticity float"
  LOOP FOR iz=-box_width TO box_width AND iy=0 TO box_height AND ix=-box_length TO box_length
    tmpu=SINGLE(omegaavg(ix,iz,iy,n-1).u); tmpv=SINGLE(omegaavg(ix,iz,iy,n-1).v); tmpw=SINGLE(omegaavg(ix,iz,iy,n-1).w) 
    ByteSwap(^tmpu); ByteSwap(^tmpv);ByteSwap(^tmpw); WRITE BINARY TO outfile tmpu,tmpv,tmpw 
  REPEAT
  CLOSE outfile

  outfile=CREATE("CField"n".dat")
  WRITE TO outfile 'VARIABLES="x" "y" "z" "u" "v" "w" "omegax" "omegay" "omegaz" "lambda2" "Q2" "Q4" "Q1avg" "Q2avg" "Q3avg" "Q4avg" "p" "pstrain"'
  WRITE TO outfile 'ZONE I='2*box_length+1',J='2*box_width+1',K='box_height+1' F=POINT'
  LOOP FOR iy=0 TO box_height
     LOOP FOR iz=-box_width TO box_width
        LOOP FOR ix=-box_length TO box_length
            WRITE TO outfile resx*ix*Retau, Retau*y(iy), resz*iz*Retau, Vavg(ix,iz,iy,n-1).u, Vavg(ix,iz,iy,n-1).v, Vavg(ix,iz,iy,n-1).w, 
                             omegaavg(ix,iz,iy,n-1).u, omegaavg(ix,iz,iy,n-1).v, omegaavg(ix,iz,iy,n-1).w,
                             lambdaavg(ix,iz,iy,n-1), rms_uv(ix,iz,iy,n-1).Q2, rms_uv(ix,iz,iy,n-1).Q4, rmsavg_uv(ix,iz,iy,n-1).Q1, rmsavg_uv(ix,iz,iy,n-1).Q2,
                             rmsavg_uv(ix,iz,iy,n-1).Q3, rmsavg_uv(ix,iz,iy,n-1).Q4, pavg(ix,iz,iy,n-1), pstrain(ix,iz,iy,n-1)
        REPEAT
     REPEAT
  REPEAT
  CLOSE outfile
REPEAT phases
CLOSE condfield

