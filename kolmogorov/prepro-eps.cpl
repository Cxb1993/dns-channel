!#define remove_Wmean
gamma=0.0
outinterv=0
USE dnsdata
USE dnsdirect
!USE rtchecks

SHARED ARRAY(0..ny) OF REAL eps=0
DERIVS=STRUCTURE(COMPLEX ux,uy,uz,vx,vy,vz,wx,wy,wz)
DERPRODS=STRUCTURE(COMPLEX ux2,vx2,wx2,uy2,vy2,wy2,uz2,vz2,wz2,uyvx,uzwx,wyvz)
DERIVS Vder(0..nx,-nz..nz)=0
DERIVS Vderd(0..nxd-1,0..nzd-1)=0
DERPRODS VVderd(0..nxd-1,0..nzd-1)=0 
ARRAY(-1..ny+1) OF VELOCITY Vy=0
ARRAY(-1..ny+1) OF STRUCTURE(REAL U, W, Uy, Wy) Vbar=0
POINTER TO STORED STRUCTURE(
  ARRAY(-1..ny+1) OF STRUCTURE(REAL U, W, Uy, Wy) Vbarimage
  ) meanfield


ARRAY(0..20) OF CHAR fieldname, outname
INTEGER nfmin, nfmax, dn
WRITE BY NAME nxd,nzd
ASK nfmin, nfmax, dn
FILE outfile
INTEGER nftot=(nfmax-nfmin+1) DIV dn

#ifndef remove_Wmean
WRITE "WARNING: it is assumed that Vmean.W is zero!"
#endif
!---------------------------------------------------------------------------------!
!------------------------ time-averaged velocity profiles  -----------------------!

WRITE('=============> Compute time-averages')
LOOP time_averages FOR n=nfmin TO nfmax BY dn
  fieldname = WRITE('Field'n'.fld');
  diskfield = OPEN(fieldname)
  WITH diskfield:
    Vbar(*).U=~+uavimage(miny..maxy)
    Vbar(*).W=~+wavimage(miny..maxy)
  CLOSE(diskfield)
REPEAT time_averages

!------- Aerage mean velocity --------!
DO WITH Vbar(iy): U=~/nftot; W=~/nftot FOR ALL iy

!------- Compute mean shear ----------!
deriv(Vbar.U,Vbar.Uy); LeftLUDivStep2(Vbar.Uy,D0mat)
deriv(Vbar.W,Vbar.Wy); LeftLUDivStep2(Vbar.Wy,D0mat)

!----- Output as stored structure ----!
meanfield=OPEN("mean.bin")
WITH meanfield: Vbarimage=Vbar; CLOSE(meanfield)

!---------------------------------------------------------------------------------!
!------------------------ compute one-point statistics ---------------------------!

WRITE('=============> Compute dissipation statistics')
LOOP files FOR n=nfmin TO nfmax BY dn

  fieldname = WRITE('Field'n'.fld');
  WRITE '=============> Processing ', fieldname 
 
  diskfield = OPEN(fieldname)
  WITH diskfield:
    V(0,0,*).u.REAL=uavimage(miny..maxy)
    V(0,0,*).w.REAL=wavimage(miny..maxy)
    LOOP FOR iy = miny TO maxy
      DO V(ix,iz,iy).v=fieldimage(iy,ix,iz).v   FOR ALL ix,iz EXCEPT ix=0 AND iz=0
      DO V(ix,iz,iy).u=fieldimage(iy,ix,iz).eta FOR ALL ix,iz EXCEPT ix=0 AND iz=0
    REPEAT LOOP
  vetaTOuvw
  V(0,0,*).u.REAL=uavimage(miny..maxy)
  V(0,0,*).w.REAL=wavimage(miny..maxy)
  CLOSE diskfield

  !----- Remove mean field --------!
  V(0,0,*).u.REAL=~-Vbar.U; 
#ifdef remove_Wmean
  V(0,0,*).w.REAL=~-Vbar.W;
#endif

  !----- Compute dissipation ------!
  PARALLEL LOOP FOR ismp=0 TO nsmp-1
  LOOP FOR iy=ismp TO ny BY nsmp
     LOOP FOR ALL ix,iz WITH Vder(ix,iz),V(ix,iz,*)
       Vy=0
       ialfa = -I*alfa0*ix; ibeta = -I*beta0*iz 
       ux=ialfa*u(iy); vx=ialfa*v(iy); wx=ialfa*w(iy)
       uz=ibeta*u(iy); vz=ibeta*v(iy); wz=ibeta*w(iy)
       deriv(u(*).REAL,Vy.u.REAL); LeftLUDivStep2(Vy.u.REAL,D0mat) 
       deriv(u(*).IMAG,Vy.u.IMAG); LeftLUDivStep2(Vy.u.IMAG,D0mat) 
       deriv(v(*).REAL,Vy.v.REAL); LeftLUDivStep2(Vy.v.REAL,D0mat) 
       deriv(v(*).IMAG,Vy.v.IMAG); LeftLUDivStep2(Vy.v.IMAG,D0mat)
       deriv(w(*).REAL,Vy.w.REAL); LeftLUDivStep2(Vy.w.REAL,D0mat)
       deriv(w(*).IMAG,Vy.w.IMAG); LeftLUDivStep2(Vy.w.IMAG,D0mat)
       uy=Vy(iy).u; vy=Vy(iy).v; wy=Vy(iy).w
       !IF ix=0 AND iz=0 THEN uy=0; vy=0; wy=0 
     REPEAT LOOP
     Vderd=0
     LOOP FOR ix=0 TO nx
       Vderd(ix,0..nz) = Vder(ix,0..nz)
       Vderd(ix,nzd+(-nz..-1)) = Vder(ix,-nz..-1)
       WITH Vderd(ix,*): IFT(ux); IFT(uy); IFT(uz); IFT(vx); IFT(vy); IFT(vz); IFT(wx); IFT(wy); IFT(wz)
     REPEAT LOOP
     DO
       WITH Vderd(*,iz): RFT(ux); RFT(uy); RFT(uz); RFT(vx); RFT(vy); RFT(vz); RFT(wx); RFT(wy); RFT(wz)
       DO WITH Vderd(ix,iz), VVderd(ix,iz):
         ux2.REAL=ux.REAL^2; ux2.IMAG=ux.IMAG^2
         uy2.REAL=uy.REAL^2; uy2.IMAG=uy.IMAG^2
         uz2.REAL=uz.REAL^2; uz2.IMAG=uz.IMAG^2
         vx2.REAL=vx.REAL^2; vx2.IMAG=vx.IMAG^2
         vy2.REAL=vy.REAL^2; vy2.IMAG=vy.IMAG^2
         vz2.REAL=vz.REAL^2; vz2.IMAG=vz.IMAG^2
         wx2.REAL=wx.REAL^2; wx2.IMAG=wx.IMAG^2
         wy2.REAL=wy.REAL^2; wy2.IMAG=wy.IMAG^2
         wz2.REAL=wz.REAL^2; wz2.IMAG=wz.IMAG^2
         uyvx.REAL=uy.REAL*vx.REAL; uyvx.IMAG=uy.IMAG*vx.IMAG
         uzwx.REAL=uz.REAL*wx.REAL; uzwx.IMAG=uz.IMAG*wx.IMAG
         wyvz.REAL=wy.REAL*vz.REAL; wyvz.IMAG=wy.IMAG*vz.IMAG
       FOR ALL ix
       WITH VVderd(*,iz):
       HFT(ux2);HFT(vx2);HFT(wx2)
       HFT(uy2);HFT(vy2);HFT(wy2)
       HFT(uz2);HFT(vz2);HFT(wz2)
       HFT(uyvx);HFT(uzwx);HFT(wyvz)
     FOR iz=0 TO nzd-1
     DO WITH VVderd(ix,*)
       FFT(ux2);FFT(vx2);FFT(wx2)
       FFT(uy2);FFT(vy2);FFT(wy2)
       FFT(uz2);FFT(vz2);FFT(wz2)
       FFT(uyvx);FFT(uzwx);FFT(wyvz)
     FOR ix=0 TO nxd-1
     WITH VVderd(0,0): eps(iy)=~+ni*REAL[ux2+vy2+wz2+uyvx+uzwx+wyvz+uy2+uz2+vx2+vz2+wx2+wy2]
  REPEAT LOOP
  REPEAT
REPEAT files

!---------------------------------------------------------------------------------!
!--------------------------- Save to file and tschuss ----------------------------!
outfile = CREATE("mean.dat")
LOOP FOR iy=0 TO ny
  WRITE TO outfile y(iy), Vbar(iy).U, Vbar(iy).Uy, eps(iy)/nftot, Vbar(iy).W, Vbar(iy).Wy,
REPEAT 
CLOSE(outfile)
