USE rtchecks
REAL gamma=0
USE dnsdata
USE dnsdirect

#define tke
!#define enstr

!#define outer
#define inner
!#define cpi

STRING outputpath=''

INTEGER phasemin,phasemax,nperiod
ASK phasemin,phasemax
REAL Sw=0, ut=0

MEANTERMS = STRUCTURE(REAL U,W,dUdy,dWdy,ddUdy,ddWdy,dissU,dissW)
#ifdef tke
TKETERMS = STRUCTURE(REAL uu,vv,ww,uv,uw,vw,prod_uv,prod_vw,pdiss,phi_diff,diff,phi_conv,conv,phi_pres,pres)
#endif
#ifdef enstr
ENSTROPHYTERMS = STRUCTURE(REAL two,three,four,five,six,seven,eight,nine,ten,eleven,enstrophy,phi_nine,corr_two,corr_three,corr_four,corr_five,corr_six,corr_seven, corr_two_wyuz,corr_two_wywx,corr_two_vzuz,corr_two_vzwx,corr_three_vxuz,corr_three_vxwx,corr_three_uyuz,corr_three_uywx)
#endif

LOOP FOR ninstant=phasemin TO phasemax

  POINTER TO STORED STRUCTURE[
    ARRAY(-1..ny+1) OF MEANTERMS phase_meandataimage 
    ARRAY(-1..ny+1) OF REAL yimage
  ] phase_meanimage

  phase_meanimage=OPEN('mean.ph'ninstant'.dat.bin')
  phase_meanname=WRITE(outputpath'mean.ph'ninstant'.dat')
  phase_meanoutfile=OPEN(phase_meanname)
  phase_infoname=WRITE(outputpath'info.ph'ninstant'.dat')
  phase_infooutfile=OPEN(phase_infoname)
  WITH phase_meanimage:
    WITH phase_meandataimage REAL Swph = 0.5*[W(0)*dWdy(0) - W(ny)*dWdy(ny)]; Sw=~+Swph; Swph=0; ut=SQRT[ni*(SUM d140(i)*0.5*[U(1+i) + U(ny-1-i)] FOR ALL i)]
    WITH phase_meandataimage WRITE TO phase_infooutfile 'uc='MAX(U), 'ut='SQRT[ni*(SUM d140(i)*0.5*[U(1+i) + U(ny-1-i)] FOR ALL i)]
    DO WITH phase_meandataimage WRITE TO phase_meanoutfile yimage(iy)/ni*ut, 0.5*[U(iy)+U(ny-iy)]/ut, 0.5*[W(iy)+W(ny-iy)]/ut, 0.5*[dUdy(iy)+(-1)*dUdy(ny-iy)]*ni/ut^2,  0.5*[dWdy(iy)+(-1)*dWdy(ny-iy)]*ni/ut^2, 0.5*[dissU(iy)+dissU(ny-iy)]*ni/ut^4, 0.5*[dissW(iy)+dissW(ny-iy)]*ni/ut^4 FOR iy=0 TO ny DIV 2
  CLOSE phase_meanimage
  CLOSE phase_meanoutfile
  CLOSE phase_infooutfile

  #ifdef tke
  POINTER TO STORED STRUCTURE[
    ARRAY(-1..ny+1) OF TKETERMS phase_tkedataimage 
    ARRAY(-1..ny+1) OF REAL yimage
  ] phase_tkeimage

  phase_tkeimage=OPEN('tke.ph'ninstant'.dat.bin')
  phase_tkename=WRITE(outputpath'tke.ph'ninstant'.dat')
  phase_tkeoutfile=OPEN(phase_tkename)
  WITH phase_tkeimage:
    DO WITH phase_tkedataimage WRITE TO phase_tkeoutfile yimage(iy)/ni*ut, SQRT[0.5*[uu(iy)+uu(ny-iy)]]/ut, SQRT[0.5*[vv(iy)+vv(ny-iy)]]/ut, SQRT[0.5*[ww(iy)+ww(ny-iy)]]/ut, 0.5*[uv(iy)-uv(ny-iy)]/ut^2, 0.5*[uw(iy)-uw(ny-iy)]/ut^2, 0.5*[vw(iy)-vw(ny-iy)]/ut^2, 0.5*[prod_uv(iy) + prod_uv(ny-iy)]*ni/ut^4, 0.5*[prod_vw(iy) + prod_vw(ny-iy)]*ni/ut^4, -0.5*[pdiss(iy)+pdiss(ny-iy)]*ni/ut^4, 0.5*[diff(iy)+diff(ny-iy)]*ni/ut^4, 0.5*[conv(iy)+conv(ny-iy)]*ni/ut^4, 0.5*[pres(iy)+pres(ny-iy)]*ni/ut^4, 0.5*[uu(iy)+vv(iy)+ww(iy)+uu(ny-iy)+vv(ny-iy)+ww(ny-iy)]/ut^2 FOR iy=0 TO ny DIV 2
  CLOSE phase_tkeimage 
  CLOSE phase_tkeoutfile
  #endif

  #ifdef enstr
  POINTER TO STORED STRUCTURE[
          ARRAY(-1..ny+1) OF ENSTROPHYTERMS phase_enstrophydataimage 
	  ARRAY(-1..ny+1) OF REAL yimage
  ] phase_enstrophyimage

  phase_enstrophyimage=OPEN('enstr.ph'ninstant'.dat.bin')
  phase_enstrophyname=WRITE(outputpath'enstr.ph'ninstant'.dat')
  phase_enstrophyoutfile=OPEN(phase_enstrophyname)
  WITH phase_enstrophyimage:
    DO WITH phase_enstrophydataimage WRITE TO phase_enstrophyoutfile yimage(iy)/ni*ut, 0.5*[two(iy)+two(ny-iy)]*ni^3/ut^6, 0.5*[three(iy)+three(ny-iy)]*ni^3/ut^6, 0.5*[four(iy)+four(ny-iy)]*ni^3/ut^6, 0.5*[five(iy)+five(ny-iy)]*ni^3/ut^6, 0.5*[six(iy)+six(ny-iy)]*ni^3/ut^6, 0.5*[seven(iy)+seven(ny-iy)]*ni^3/ut^6, 0.5*[eight(iy)+eight(ny-iy)]*ni^3/ut^6, 0.5*[nine(iy)+nine(ny-iy)]*ni^3/ut^6, 0.5*[ten(iy)+ten(ny-iy)]*ni^3/ut^6, 0.5*[eleven(iy)+eleven(ny-iy)]*ni^3/ut^6, 0.5*[enstrophy(iy)+enstrophy(ny-iy)]*ni^2/ut^4, 0.5*[corr_two(iy)+(-1)*corr_two(ny-iy)]*ni^2/ut^4, 0.5*[corr_three(iy)+(-1)*corr_three(ny-iy)]*ni^2/ut^4, 0.5*[corr_two_wyuz(iy)+(-1)*corr_two_wyuz(ny-iy)]*ni^2/ut^4, 0.5*[corr_two_wywx(iy)+(-1)*corr_two_wywx(ny-iy)]*ni^2/ut^4, 0.5*[corr_two_vzuz(iy)+(-1)*corr_two_vzuz(ny-iy)]*ni^2/ut^4, 0.5*[corr_two_vzwx(iy)+(-1)*corr_two_vzwx(ny-iy)]*ni^2/ut^4, 0.5*[corr_three_vxuz(iy)+(-1)*corr_three_vxuz(ny-iy)]*ni^2/ut^4, 0.5*[corr_three_vxwx(iy)+(-1)*corr_three_vxwx(ny-iy)]*ni^2/ut^4, 0.5*[corr_three_uyuz(iy)+(-1)*corr_three_uyuz(ny-iy)]*ni^2/ut^4, 0.5*[corr_three_uywx(iy)+(-1)*corr_three_uywx(ny-iy)]*ni^2/ut^4 FOR iy=0 TO ny DIV 2
  CLOSE phase_enstrophyimage 
  CLOSE phase_enstrophyoutfile
  #endif

REPEAT

POINTER TO STORED STRUCTURE[
  ARRAY(-1..ny+1) OF MEANTERMS meandataimage 
  ARRAY(-1..ny+1) OF REAL yimage
] meanimage

MEANTERMS meanintegrals

meanimage=OPEN('mean.dat.bin')
meanintegralsname=WRITE(outputpath'mean.yintegrals.dat')
meanintegralsoutfile=OPEN(meanintegralsname)
meanname=WRITE(outputpath'mean.dat')
meanoutfile=OPEN(meanname)
infoname=WRITE(outputpath'info.dat')
infooutfile=OPEN(infoname)
WITH meanimage:
  WITH meandataimage: yintegr(meanintegrals.U,U); yintegr(meanintegrals.dissU,dissU); yintegr(meanintegrals.dissW,dissW); ut=SQRT[ni*(SUM d140(i)*0.5*[U(1+i) + U(ny-1-i)] FOR ALL i)]
  #ifdef cpi
  WITH meanintegrals WRITE BY NAME TO meanintegralsoutfile U/2*ut^2, dissU/2, dissW/2, -Sw/[phasemax-phasemin+1]*ni
  #endif
  #ifdef inner
  WITH meanintegrals WRITE BY NAME TO meanintegralsoutfile U/2/ut, dissU/2/ut^3, dissW/2/ut^3, Sw/[phasemax-phasemin+1]/ut^3*ni
  #endif
  #ifdef outer
  WITH meanintegrals WRITE BY NAME TO meanintegralsoutfile U/2/ut*ut*3173/200, dissU/2/ut^3*ut*3173/200, dissW/2/ut^3*ut*3173/200, Sw/[phasemax-phasemin+1]/ut^3*ni*ut*3173/200
  #endif
  WITH meandataimage WRITE TO infooutfile 'uc='MAX(U), 'ut='SQRT[ni*(SUM d140(i)*0.5*[U(1+i) + U(ny-1-i)] FOR ALL i)]
  DO WITH meandataimage WRITE TO meanoutfile yimage(iy)/ni*ut, 0.5*[U(iy)+U(ny-iy)]/ut, 0.5*[W(iy)+W(ny-iy)]/ut, 0.5*[dUdy(iy)+(-1)*dUdy(ny-iy)]*ni/ut^2,  0.5*[dWdy(iy)+(-1)*dWdy(ny-iy)]*ni/ut^2, 0.5*[dissU(iy)+dissU(ny-iy)]*ni/ut^4, 0.5*[dissW(iy)+dissW(ny-iy)]*ni/ut^4 FOR iy=0 TO ny DIV 2
CLOSE meanimage
CLOSE meanintegralsoutfile
CLOSE meanoutfile
CLOSE infooutfile

#ifdef tke
POINTER TO STORED STRUCTURE[
  ARRAY(-1..ny+1) OF TKETERMS tkedataimage 
  ARRAY(-1..ny+1) OF REAL yimage
] tkeimage

TKETERMS tkeintegrals

tkeimage=OPEN('tke.dat.bin')
tkeintegralsname=WRITE(outputpath'tke.yintegrals.dat')
tkeintegralsoutfile=OPEN(tkeintegralsname)
tkename=WRITE(outputpath'tke.dat')
tkeoutfile=OPEN(tkename)
WITH tkeimage:
  WITH tkedataimage: yintegr(tkeintegrals.prod_uv,prod_uv); yintegr(tkeintegrals.prod_vw,prod_vw); yintegr(tkeintegrals.pdiss,pdiss); yintegr(tkeintegrals.diff,diff); yintegr(tkeintegrals.conv,conv); yintegr(tkeintegrals.pres,pres); yintegr(tkeintegrals.uu,uu); yintegr(tkeintegrals.vv,vv); yintegr(tkeintegrals.ww,ww)
  #ifdef cpi
  WITH tkeintegrals WRITE BY NAME TO tkeintegralsoutfile prod_uv/2, prod_vw/2, pdiss/2, diff/2, conv/2, pres/2, [uu + vv + ww]/2
  #endif
  #ifdef inner
  WITH tkeintegrals WRITE BY NAME TO tkeintegralsoutfile prod_uv/2/ut^3, prod_vw/2/ut^3, pdiss/2/ut^3, diff/2/ut^3, conv/2/ut^3, pres/2/ut^3, [uu + vv + ww]/2/ni/ut
  #endif
  #ifdef outer
  WITH tkeintegrals WRITE BY NAME TO tkeintegralsoutfile prod_uv/2/ut^3*ut*3173/200, prod_vw/2/ut^3*ut*3173/200, pdiss/2/ut^3*ut*3173/200, diff/2/ut^3*ut*3173/200, conv/2/ut^3*ut*3173/200, pres/2/ut^3*ut*3173/200, [uu + vv + ww]/2/ni/ut*ut*3173/200
  #endif
  DO WITH tkedataimage WRITE TO tkeoutfile yimage(iy)/ni*ut, SQRT[0.5*[uu(iy)+uu(ny-iy)]]/ut, SQRT[0.5*[vv(iy)+vv(ny-iy)]]/ut, SQRT[0.5*[ww(iy)+ww(ny-iy)]]/ut, 0.5*[uv(iy)-uv(ny-iy)]/ut^2, 0.5*[uw(iy)-uw(ny-iy)]/ut^2, 0.5*[vw(iy)-vw(ny-iy)]/ut^2, 0.5*[prod_uv(iy) + prod_uv(ny-iy)]*ni/ut^4, 0.5*[prod_vw(iy) + prod_vw(ny-iy)]*ni/ut^4, -0.5*[pdiss(iy)+pdiss(ny-iy)]*ni/ut^4, 0.5*[diff(iy)+diff(ny-iy)]*ni/ut^4, 0.5*[conv(iy)+conv(ny-iy)]*ni/ut^4, 0.5*[pres(iy)+pres(ny-iy)]*ni/ut^4, 0.5*[uu(iy)+vv(iy)+ww(iy)+uu(ny-iy)+vv(ny-iy)+ww(ny-iy)]/ut^2 FOR iy=0 TO ny DIV 2
CLOSE tkeimage
CLOSE tkeintegralsoutfile
CLOSE tkeoutfile
#endif

#ifdef enstr
POINTER TO STORED STRUCTURE[
  ARRAY(-1..ny+1) OF ENSTROPHYTERMS enstrophydataimage
  ARRAY(-1..ny+1) OF REAL yimage
] enstrophyimage

ENSTROPHYTERMS enstrophyintegrals

enstrophyimage=OPEN('enstr.dat.bin')
enstrophyintegralsname=WRITE(outputpath'enstr.yintegrals.dat')
enstrophyintegralsoutfile=OPEN(enstrophyintegralsname)
enstrophyname=WRITE(outputpath'enstr.dat')
enstrophyoutfile=OPEN(enstrophyname)
WITH enstrophyimage:
  WITH enstrophydataimage: yintegr(enstrophyintegrals.two,two); yintegr(enstrophyintegrals.three,three); yintegr(enstrophyintegrals.four,four); yintegr(enstrophyintegrals.five,five); yintegr(enstrophyintegrals.six,six); yintegr(enstrophyintegrals.seven,seven); yintegr(enstrophyintegrals.eight,eight); yintegr(enstrophyintegrals.nine,nine); yintegr(enstrophyintegrals.ten,ten); yintegr(enstrophyintegrals.eleven,eleven); yintegr(enstrophyintegrals.enstrophy,enstrophy)
  #ifdef inner
  WITH enstrophyintegrals WRITE BY NAME TO enstrophyintegralsoutfile two/2*ni^2/ut^5, three/2*ni^2/ut^5, four/2*ni^2/ut^5, five/2*ni^2/ut^5, six/2*ni^2/ut^5, seven/2*ni^2/ut^5, eight/2*ni^2/ut^5, nine/2*ni^2/ut^5, ten/2*ni^2/ut^5, eleven/2*ni^2/ut^5, enstrophy/2*ni/ut^3
  #endif
  #ifdef outer
  WITH enstrophyintegrals WRITE BY NAME TO enstrophyintegralsoutfile two/2*ni^2/ut^5*ut*3173/200, three/2*ni^2/ut^5*ut*3173/200, four/2*ni^2/ut^5*ut*3173/200, five/2*ni^2/ut^5*ut*3173/200, six/2*ni^2/ut^5*ut*3173/200, seven/2*ni^2/ut^5*ut*3173/200, eight/2*ni^2/ut^5*ut*3173/200, nine/2*ni^2/ut^5*ut*3173/200, ten/2*ni^2/ut^5*ut*3173/200, eleven/2*ni^2/ut^5*ut*3173/200, enstrophy/2*ni/ut^3*ut*3173/200
  #endif
  DO WITH enstrophydataimage WRITE TO enstrophyoutfile yimage(iy)/ni*ut, 0.5*[two(iy)+two(ny-iy)]*ni^3/ut^6, 0.5*[three(iy)+three(ny-iy)]*ni^3/ut^6, 0.5*[four(iy)+four(ny-iy)]*ni^3/ut^6, 0.5*[five(iy)+five(ny-iy)]*ni^3/ut^6, 0.5*[six(iy)+six(ny-iy)]*ni^3/ut^6, 0.5*[seven(iy)+seven(ny-iy)]*ni^3/ut^6, 0.5*[eight(iy)+eight(ny-iy)]*ni^3/ut^6, 0.5*[nine(iy)+nine(ny-iy)]*ni^3/ut^6, 0.5*[ten(iy)+ten(ny-iy)]*ni^3/ut^6, 0.5*[eleven(iy)+eleven(ny-iy)]*ni^3/ut^6, 0.5*[enstrophy(iy)+enstrophy(ny-iy)]*ni^2/ut^4, 0.5*[corr_two(iy)+(-1)*corr_two(ny-iy)]*ni^2/ut^4, 0.5*[corr_three(iy)+(-1)*corr_three(ny-iy)]*ni^2/ut^4, 0.5*[corr_two_wyuz(iy)+(-1)*corr_two_wyuz(ny-iy)]*ni^2/ut^4, 0.5*[corr_two_wywx(iy)+(-1)*corr_two_wywx(ny-iy)]*ni^2/ut^4, 0.5*[corr_two_vzuz(iy)+(-1)*corr_two_vzuz(ny-iy)]*ni^2/ut^4, 0.5*[corr_two_vzwx(iy)+(-1)*corr_two_vzwx(ny-iy)]*ni^2/ut^4, 0.5*[corr_three_vxuz(iy)+(-1)*corr_three_vxuz(ny-iy)]*ni^2/ut^4, 0.5*[corr_three_vxwx(iy)+(-1)*corr_three_vxwx(ny-iy)]*ni^2/ut^4, 0.5*[corr_three_uyuz(iy)+(-1)*corr_three_uyuz(ny-iy)]*ni^2/ut^4, 0.5*[corr_three_uywx(iy)+(-1)*corr_three_uywx(ny-iy)]*ni^2/ut^4 FOR iy=0 TO ny DIV 2
CLOSE enstrophyimage
CLOSE enstrophyintegralsoutfile
CLOSE enstrophyoutfile
#endif


